// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: proto/mapreduce.proto

package mapreduce

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMapper  bool `protobuf:"varint,1,opt,name=is_mapper,json=isMapper,proto3" json:"is_mapper,omitempty"`
	IsReducer bool `protobuf:"varint,2,opt,name=is_reducer,json=isReducer,proto3" json:"is_reducer,omitempty"`
	// List of reducer info if mapper
	Reducers []*ReducerInfo `protobuf:"bytes,3,rep,name=reducers,proto3" json:"reducers,omitempty"`
	// Number of mappers total (if reducer), so reducer knows how many done signals to wait for
	TotalMappers int32 `protobuf:"varint,4,opt,name=total_mappers,json=totalMappers,proto3" json:"total_mappers,omitempty"`
	// Interval for this reducer if is_reducer == true
	IntervalStart int64 `protobuf:"varint,5,opt,name=interval_start,json=intervalStart,proto3" json:"interval_start,omitempty"`
	IntervalEnd   int64 `protobuf:"varint,6,opt,name=interval_end,json=intervalEnd,proto3" json:"interval_end,omitempty"`
}

func (x *AssignRoleRequest) Reset() {
	*x = AssignRoleRequest{}
	mi := &file_proto_mapreduce_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleRequest) ProtoMessage() {}

func (x *AssignRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleRequest.ProtoReflect.Descriptor instead.
func (*AssignRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{0}
}

func (x *AssignRoleRequest) GetIsMapper() bool {
	if x != nil {
		return x.IsMapper
	}
	return false
}

func (x *AssignRoleRequest) GetIsReducer() bool {
	if x != nil {
		return x.IsReducer
	}
	return false
}

func (x *AssignRoleRequest) GetReducers() []*ReducerInfo {
	if x != nil {
		return x.Reducers
	}
	return nil
}

func (x *AssignRoleRequest) GetTotalMappers() int32 {
	if x != nil {
		return x.TotalMappers
	}
	return 0
}

func (x *AssignRoleRequest) GetIntervalStart() int64 {
	if x != nil {
		return x.IntervalStart
	}
	return 0
}

func (x *AssignRoleRequest) GetIntervalEnd() int64 {
	if x != nil {
		return x.IntervalEnd
	}
	return 0
}

type AssignRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AssignRoleResponse) Reset() {
	*x = AssignRoleResponse{}
	mi := &file_proto_mapreduce_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleResponse) ProtoMessage() {}

func (x *AssignRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleResponse.ProtoReflect.Descriptor instead.
func (*AssignRoleResponse) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{1}
}

func (x *AssignRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int64 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *SendChunkRequest) Reset() {
	*x = SendChunkRequest{}
	mi := &file_proto_mapreduce_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChunkRequest) ProtoMessage() {}

func (x *SendChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChunkRequest.ProtoReflect.Descriptor instead.
func (*SendChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{2}
}

func (x *SendChunkRequest) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type SendChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendChunkResponse) Reset() {
	*x = SendChunkResponse{}
	mi := &file_proto_mapreduce_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChunkResponse) ProtoMessage() {}

func (x *SendChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChunkResponse.ProtoReflect.Descriptor instead.
func (*SendChunkResponse) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{3}
}

func (x *SendChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendMappedDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values         []int64 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	ReducerAddress string  `protobuf:"bytes,2,opt,name=reducer_address,json=reducerAddress,proto3" json:"reducer_address,omitempty"`
}

func (x *SendMappedDataRequest) Reset() {
	*x = SendMappedDataRequest{}
	mi := &file_proto_mapreduce_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMappedDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMappedDataRequest) ProtoMessage() {}

func (x *SendMappedDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMappedDataRequest.ProtoReflect.Descriptor instead.
func (*SendMappedDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{4}
}

func (x *SendMappedDataRequest) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SendMappedDataRequest) GetReducerAddress() string {
	if x != nil {
		return x.ReducerAddress
	}
	return ""
}

type NotifyMapperDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapperAddress string `protobuf:"bytes,1,opt,name=mapper_address,json=mapperAddress,proto3" json:"mapper_address,omitempty"`
}

func (x *NotifyMapperDoneRequest) Reset() {
	*x = NotifyMapperDoneRequest{}
	mi := &file_proto_mapreduce_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyMapperDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMapperDoneRequest) ProtoMessage() {}

func (x *NotifyMapperDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMapperDoneRequest.ProtoReflect.Descriptor instead.
func (*NotifyMapperDoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyMapperDoneRequest) GetMapperAddress() string {
	if x != nil {
		return x.MapperAddress
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_mapreduce_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{6}
}

type ReducerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	IntervalStart int64  `protobuf:"varint,2,opt,name=interval_start,json=intervalStart,proto3" json:"interval_start,omitempty"`
	IntervalEnd   int64  `protobuf:"varint,3,opt,name=interval_end,json=intervalEnd,proto3" json:"interval_end,omitempty"`
}

func (x *ReducerInfo) Reset() {
	*x = ReducerInfo{}
	mi := &file_proto_mapreduce_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReducerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducerInfo) ProtoMessage() {}

func (x *ReducerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mapreduce_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducerInfo.ProtoReflect.Descriptor instead.
func (*ReducerInfo) Descriptor() ([]byte, []int) {
	return file_proto_mapreduce_proto_rawDescGZIP(), []int{7}
}

func (x *ReducerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReducerInfo) GetIntervalStart() int64 {
	if x != nil {
		return x.IntervalStart
	}
	return 0
}

func (x *ReducerInfo) GetIntervalEnd() int64 {
	if x != nil {
		return x.IntervalEnd
	}
	return 0
}

var File_proto_mapreduce_proto protoreflect.FileDescriptor

var file_proto_mapreduce_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x58, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x40, 0x0a, 0x17,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x71, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x32, 0xb2, 0x02, 0x0a, 0x0d, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0a,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x70,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x70, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x1b, 0x5a, 0x19, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mapreduce_proto_rawDescOnce sync.Once
	file_proto_mapreduce_proto_rawDescData = file_proto_mapreduce_proto_rawDesc
)

func file_proto_mapreduce_proto_rawDescGZIP() []byte {
	file_proto_mapreduce_proto_rawDescOnce.Do(func() {
		file_proto_mapreduce_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mapreduce_proto_rawDescData)
	})
	return file_proto_mapreduce_proto_rawDescData
}

var file_proto_mapreduce_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_mapreduce_proto_goTypes = []any{
	(*AssignRoleRequest)(nil),       // 0: mapreduce.AssignRoleRequest
	(*AssignRoleResponse)(nil),      // 1: mapreduce.AssignRoleResponse
	(*SendChunkRequest)(nil),        // 2: mapreduce.SendChunkRequest
	(*SendChunkResponse)(nil),       // 3: mapreduce.SendChunkResponse
	(*SendMappedDataRequest)(nil),   // 4: mapreduce.SendMappedDataRequest
	(*NotifyMapperDoneRequest)(nil), // 5: mapreduce.NotifyMapperDoneRequest
	(*Empty)(nil),                   // 6: mapreduce.Empty
	(*ReducerInfo)(nil),             // 7: mapreduce.ReducerInfo
}
var file_proto_mapreduce_proto_depIdxs = []int32{
	7, // 0: mapreduce.AssignRoleRequest.reducers:type_name -> mapreduce.ReducerInfo
	0, // 1: mapreduce.WorkerService.AssignRole:input_type -> mapreduce.AssignRoleRequest
	2, // 2: mapreduce.WorkerService.SendChunk:input_type -> mapreduce.SendChunkRequest
	4, // 3: mapreduce.WorkerService.SendMappedData:input_type -> mapreduce.SendMappedDataRequest
	5, // 4: mapreduce.WorkerService.NotifyMapperDone:input_type -> mapreduce.NotifyMapperDoneRequest
	1, // 5: mapreduce.WorkerService.AssignRole:output_type -> mapreduce.AssignRoleResponse
	3, // 6: mapreduce.WorkerService.SendChunk:output_type -> mapreduce.SendChunkResponse
	6, // 7: mapreduce.WorkerService.SendMappedData:output_type -> mapreduce.Empty
	6, // 8: mapreduce.WorkerService.NotifyMapperDone:output_type -> mapreduce.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_mapreduce_proto_init() }
func file_proto_mapreduce_proto_init() {
	if File_proto_mapreduce_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mapreduce_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mapreduce_proto_goTypes,
		DependencyIndexes: file_proto_mapreduce_proto_depIdxs,
		MessageInfos:      file_proto_mapreduce_proto_msgTypes,
	}.Build()
	File_proto_mapreduce_proto = out.File
	file_proto_mapreduce_proto_rawDesc = nil
	file_proto_mapreduce_proto_goTypes = nil
	file_proto_mapreduce_proto_depIdxs = nil
}
